#!/usr/bin/gawk -f

# Copyright (C) 2005  locsmif <locsmif@rebelhomicide.demon.nl>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

func err(errstr) { print errstr > "/dev/stderr" }

func error(errno) {
	printf ("%s", self " error: ") > "/dev/stderr"
	if (errno == 1) err("you must be root")
	else if (errno == 2) err("a device file must be specified")
	else if (errno == 3) err("m003")
	else { err("unprintable error"); errno=255 }
	exit errno
}

BEGIN { 
	IGNORECASE=1
	self="fstype"
	if (PROCINFO["uid"] != 0) error(1)
	if (!ARGV[1]) error(2)
	cmd = "disktype " ARGV[1] 
} 

func seek() { while (1) { if (!(cmd | getline)) exit; if (/^ *partition/) return } }

func ext() { if (/^ *type 0x(05|0F)/) return 1; else return 0 }

func tomodule(str) { sub(/^fat[0-9]+/, "vfat", str); return str }

BEGIN {
	while (cmd | getline) {
		if (/^block device/) {
			if (/size 1 KiB \(1024 bytes\)/) { print "extended"; exit }
			while (cmd | getline) { 
				if (/^ *partition/) {
					while (cmd | getline) {
						if (ext()) { print "extended"; seek() }
						else { 
							if (/^ *partition/) { print "auto" }
							else if (/file system/) { print tomodule(tolower($1)); seek() }
							else if (/swap/) { print "swap"; seek() }
						}
					}
				} 
				else if (/file system/) { print tomodule(tolower($1)); exit } 
				else if (/swap/) { print "swap"; exit }
			} 
			print "auto"
		}
	}
}

